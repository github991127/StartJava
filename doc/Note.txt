⚫●◽★
——————————————————————
2023新版Java视频教程，一套超哇塞的Java教程，java零基础自学入门必看黑马java教程
https://www.bilibili.com/video/BV1Fv4y1q7ZH?p=180

⚫P103进阶篇-Day1-03-static修饰成员方法
●static 关键字
代码/day01-code/src/com/itheima/mstatic
◽工具类，构造函数私有private，全是静态方法，通过类调用，如system类
◽静态方法中, 对象未加载，只能访问静态方法和静态成员，不能用this
◽main是静态方法

⚫P110进阶篇-Day1-10-继承综合练习
代码/day01-code/src/com/itheima/test
●子类构造与父类构造，子类新变量get，set
●子类方法重写父类方法

——————————————————————

⚫P114进阶篇-Day2-02-抽象类的注意事项
day02-code/src/com/itheima/mabstract
●抽象类有构造方法，也可以有普通方法，让其子类使用
●继承抽象类后，要么实现所有抽象方法，要么继续保持抽象类

⚫P116进阶篇-Day2-04-接口中的成员特点
day02-code/src/com/itheima/minterface
●语句
类实现接口：class 子类 extends 父类 implements 接口名 , 接口名
接口继承接口：interface 子接口 extends 接口名 , 接口名
●接口中：无构造方法，普通方法默认抽象public abstract，成员变量默认常量public static final

⚫P120进阶篇-Day2-08-多态的成员访问特点
day02-code/src/com/itheima/order
●过程
OrderServiceImpl implements OrderService
OverseasServiceImpl implements OrderService // 多个类实现了同个接口

OrderService orderService = null; // 创建接口类型变量

orderService = new OrderServiceImpl();
orderService = new OverseasServiceImpl(); // 创建对象，赋值给接口类型变量

orderService.paid(); // 调用实现类的接口方法（运行时看右：实现类）
osi.check() // 不能调用实现类的独有方法（编译时看左：接口）

●调用实现类的独有方法
if(orderService instanceof OverseasServiceImpl){
            OverseasServiceImpl osi = (OverseasServiceImpl) orderService; // 调用独有方法前需要类型转换，用新变量调用
            osi.check();
        }

——————————————————————

⚫P126进阶篇-Day3-05-匿名内部类
day03-code/src/com/itheima/inner
●语句
new 类名(){子类方法}  : 代表继承这个类
new 接口名(){重写方法} : 代表实现这个接口
●使用
方法参数是接口类型变量，要传入接口实现类的对象。要么创建实现类和对象（方法多），要么直接给匿名实现（方法少）

⚫P128进阶篇-Day3-07-Lambda表达式省略
day03-code/src/com/itheima/lambda/test
●简化匿名内部类的lamda表达式
() -> {}
() : 匿名内部类被重写方法的形参列表
{} : 被重写方法的方法体代码
●要求
匿名内部类：类，接口
lamda表达式：函数式接口（只有一个方法）
●简化alt+enter
()参数类型省略
()单参数，省略()
{}单语句，省略{};return

⚫P131进阶篇-Day3-10-JLabel展示文本
day03-code/src/com/itheima/frame
●JFrame，JLabel，JButton
●路径使用\\

⚫P133进阶篇-Day3-12-适配器设计模式
day03-code/src/com/itheima/design/adapter
问题：接口实现类不想实现所有接口方法
解决：适配器设计模式。定义抽象类A空实现所有接口方法（子类无须super调用），新建子类继承类A部分方法

⚫P134进阶篇-Day3-13-模板设计模式
day03-code/src/com/itheima/design/template
问题：多个类想实现固定方法和自定义方法
解决：模板设计模式。定义抽象类A，final固定的方法，abstract自定义方法。子类继承模板类并实现自定义方法

——————————————————————

⚫P137进阶篇-Day4-03-绘制界面-使用循环和二维数组优化
●相对路径：从根项目开始（不包含\\）
●遍历加载：通过数组和相对路径字符串拼接，修改文件名

⚫P138进阶篇-Day4-04-使用继承重构代码
●问题：Frame类如何扩展为自己的类
解决：新建继承类，代码根据功能封装成不同方法，初始化部分通过构造方法调用，跨方法使用的变量设置为成员变量，父类方法super调用或直接调用（未重写）

⚫P140进阶篇-Day4-06-移动业务准备
●问题：MyFrame类如何使用接口变量
解决：this.addKeyListener(this);
类继承父类，this代表当前对象，调用父类可以调用的监听方法
类实现接口，自己作为实现类，传递this即可传递接口实现

⚫P145进阶篇-Day4-11-统计步数-重新游戏
●问题：MyFrame类如何使用接口变量
解决：restartButton.addActionListener(lamda表达式);
匿名实现类，单函数接口且业务逻辑简单使用lamda表达式简化

●问题：无法操作主窗体
解决：restartButton.setFocusable(false);//按钮需要失焦

——————————————————————

⚫P146进阶篇-Day5-01-Object类-toString
代码/day05-code/src/com/itheima
问题：查看调用的方法是否重写
解决：ctrl+左键查看源码。查看该类及其父类，ctrl+F12搜索当前文件的所有类接口方法

toString() // 返回类名+内存地址哈希值，print自动调用
equals(Object o) // 比较内存地址，alt+insert自动重写。分别比较地址，类字节码，null，内容确保健壮性。null对象无法调用
objects.equals(Object a,Object b) // null对象可以传参，会判断null后再自动调用equals(Object o)

⚫P150进阶篇-Day5-05-BigDecimal类
代码/day05-code/src/com/itheima/bigdecimal
valueOf(3.0) // B转D
doubleValue() //  D转B

⚫P151进阶篇-Day5-06-包装类
代码/day05-code/src/com/itheima/integer
自动装箱拆箱
Integer.toBinaryString(num) // 数字转二进制字符串
Integer.parseInt(s) // 字符串转数字

——————————————————————

⚫P158进阶篇-Day6-06-使用正则做爬取
代码/day06-code/src/com/itheima/test/PatternTest.java
s.split("\\."); // 任意字符.需要防止转义
s.replaceAll("\\d", ""); // 遍历替换
编写String regex正则表达式字符串，获取Pattern 对象及其匹配器，循环输出匹配结果

——————————————————————

⚫P160进阶篇-Day7-02-JDK7-日历类
代码/day07-code/src/com/itheima/jdk7/calendar
Calendar.getInstance() // 抽象类，提供特殊方法获取对象
Calendar.MONTH // 月为0-11
Calendar.DAY_OF_WEEK // 周日到周六为1-7
Calendar和Data互相转换

字符串和Data互相转换，通过SimpleDateFormat

⚫P162进阶篇-Day7-04-JDK8-时间格式化
原对象不可变，多线程安全
LocalDateTime，ChronoUnit
LocalDate，Period
LocalTime，Duration

字符串和Data互相转换，通过DateTimeFormatter
——————————————————————

⚫P165进阶篇-Day8-03-异常的两种处理方式
代码/day08-code/src/com/itheima/test
try-catch，不抛出异常继续执行，调用方
throw，抛出编译时异常，终止执行，throws声明在方法头，实现方提醒调用方try-catch捕获异常，e.getMessage()显示实现方异常信息
throw，抛出运行时异常，终止执行

——————————————————————

⚫P167进阶篇-Day9-01-集合体系结构介绍
代码/day09-code/src/com/itheima/collection/CollectionTest1.java
public boolean remove(E e)，public boolean contains(Object obj) 均依赖于equals方法，需要重写equals

——————————————————————

⚫P171进阶篇-Day10-01-泛型
●泛型类
创建对象的时候确定具体类型
●泛型方法
非静态：泛型是根据类的泛型去匹配的
静态：需要声明出自己独立的泛型
●泛型接口
类实现接口的时候，直接确定类型
延续接口的泛型，等创建对象的时候再确定
●泛型限定
?extends E(只能接收E或者是E的子类)
?super E(只能接收E或者是E的父类)

⚫P172进阶篇-Day10-02-数据结构
●二叉查找树
左小右大
缺点：可能集中在一侧浪费空间
●平衡二叉树
旋转操作，保证左右子树高度差不大于1。根据当前节点位置（4种情况）进行1-2次旋转，当前节点从下向上找第一颗节点（其左右子树高度差大于1）
左左：根的左节点的左树，右旋
左右：根的左节点的左树，小左旋+右旋
右左
右右
缺点：旋转动全局
●红黑树B-
四原则：
节点二色且根黑
叶子延伸两个黑
父子节点红不等
两个子树黑相等

变色原则：
默认加红，父红三种
一为叔红，父叔变黑，爷爷变红，再看爷爷
二我为左，左旋看父（看旋之前的父）
三我为右，父黑爷红，爷爷右旋

⚫P173进阶篇-Day10-03-TreeSet集合
代码/day10/set
add()依赖于compareTo()，根据返回值决定红黑树放置规则，+右-左0放弃
自然排序：类实现Comparable接口，类内重写方法compareTo
比较器排序（优先）：TreeSet包含Comparator函数式接口，构造传参，lamda重写方法compare

——————————————————————

⚫P176进阶篇-Day11-03-Map集合
代码/day11/map
HashMap : 键唯一 (重写hashCode和equals方法)
TreeMap : 键排序 (实现Comparable接口, 重写compareTo方法)
LinkedHashMap : 键唯一, 且可以保证存取顺序

——————————————————————

⚫P177进阶篇-Day12-01-Stream流
代码/day12/stream
集合转流：获取流对象，stream
Stream流的中间操作方法：返回流，可链式调用，函数式接口，一个流只能消费一次。filter，concat
流转集合：Collector工具类，toList，toSet

⚫P178进阶篇-Day12-02-File类
代码/day12/file

⚫P179进阶篇-Day13-01-IO流-字节流
代码/day13-code/src/com/itheima/stream/CopyTest2.java
FileInputStream，针对各类文件
普通流 + 自定义数组拷贝
缓冲流 + 自定义数组拷贝

⚫P180进阶篇-Day13-02-IO流-字符流
代码/day13-code/src/com/itheima/stream/character
FileReader，针对纯文本文件，read读取的是int码
flush缓冲区推入文件，close先flush再关闭流
